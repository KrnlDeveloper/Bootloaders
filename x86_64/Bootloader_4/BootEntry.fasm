use16


;//////////////// Conditional compilation constants //////////////////



;//////////////// Constants //////////////////
BOOT_ADDRESS = 07C00h
STACK_ADDRESS = 09000h
SECTOR_SIZE = 512

org BOOT_ADDRESS

BootEntry:
	cli
	mov AX, CS
	mov DS, AX
	mov ES, AX
	mov SS, AX 

	mov BP, STACK_ADDRESS
	mov SP, BP

	mov [DiskId], DL
	sti

	push ActionMsg
	call DbgPrint

	xor AX, AX
	call getchar

	

Exit:
	push ExitMsg
	call DbgPrint

	push 8480h
	push 001Eh
	call Delay

	cli
	hlt



;//////////////// void DbgPrint(char* Str) //////////////////
;	Str -> [BP + 4]
DbgPrint:			
	push BP
	mov BP, SP

	push SI
	push AX

	mov SI, [BP + 4]	; Str -> SI

@@:
	mov AH, 0Eh
	mov AL, [SI]
	test AL, AL
	jz @f
	int 10h
	inc SI
	jmp @b

@@:
	pop AX
	pop SI

	mov SP, BP
	pop BP
	retn 2


;//////////////// char getchar() //////////////////
getchar:
	xor AX, AX
	int 016h

	mov AH, 0Eh
	int 10h

	ret


;//////////////// void Delay(short DelayHighPart, short DelayLowPart) //////////////////
;	Time -> [BP + 4]
;	DelayHighPart -> [BP + 4]
;	DelayLowPart  -> [BP + 6]
Delay:
	push BP
	mov BP, SP

	push AX
	push CX
	push DX

	mov CX, word [BP + 4]
	mov DX, word [BP + 6]

	mov AX, 08600h
	int 15h

	pop DX
	pop CX
	pop AX

	mov SP, BP
	pop BP

	retn 4

;//////////////// void Reboot() //////////////////
Reboot:
	push RebootMsg
	call DbgPrint

	push 8480h
	push 001Eh
	call Delay

	push BP
	mov BP, SP

	mov AX, 0040h
	mov DS, AX
	mov word [0072h], 1234h
	jmp 0F000h:0FFF0h

	mov SP, BP
	pop BP

	ret

;//////////////// void SoftReboot() //////////////////
SoftReboot:
	push SoftRebootMsgRebootMsg
	call DbgPrint

	push 8480h
	push 001Eh
	call Delay

	push BP
	mov BP, SP

	int 19h

	mov SP, BP
	pop BP

	ret

;//////////////// void Shutdown() //////////////////
Shutdown:
	push ShutdownMsg
	call DbgPrint

	push 8480h
	push 001Eh
	call Delay

	push BP
	mov BP, SP

	mov AX, 05301h
	xor BX, BX
	int 15h

	mov AX, 530Eh
	xor BX, BX
	mov CX, 0102h
	int 15h

	mov AX, 5307h
	mov BX, 0001h
	mov CX, 0003h
	int 15h

	mov SP, BP
	pop BP

	ret

;//////////////// void ShutDown2() //////////////////
;not working
ShutDown2:
	push BP
	mov BP, SP

	push AX
	push BX
	push CX
	push SS
	push SP

	mov AX, 1000h
	mov SS, AX

	mov SP, 0F000h
	mov AX, 5307h
	mov BX, 0001h
	mov CX, 0003h
	int 15h

	pop SP
	pop SS
	pop CX
	pop BX
	pop AX

	mov SP, BP
	pop BP

	ret

;//////////////// void Halt() //////////////////
Halt:
	push HaltMsg
	call DbgPrint

	push 8480h
	push 001Eh
	call Delay

	hlt

	ret

;//////////////// Data: Sector 1 //////////////////
DiskId db 00h

ActionMsg db '0 - Exit, 1 - Reboot, 2 - SoftReboot, 3 - Shutdown, 4 - Halt', 0Ah, 0Dh, 00h
ExitMsg db 'Dbg: Exit called', 0Ah, 0Dh, 00h
RebootMsg db 'Dbg: Reboot called', 0Ah, 0Dh, 00h
SoftRebootMsg db 'Dbg: SoftReboot called', 0Ah, 0Dh, 00h
ShutdownMsg db 'Dbg: Shutdown called', 0Ah, 0Dh, 00h
HaltMsg db db 'Dbg: Halt called', 0Ah, 0Dh, 00h

times SECTOR_SIZE - 2 - ($ - $$) db 0
db 0x55, 0xAA